# React examples

* [A simple counter.](counter.html) This is a basic React example. There is a functional component with the `useState` hook. Notice how the core logic — the `counter` state field — is mixed with the fluff — the fade effects.
* [A counter with separate core logic.](separate_logic.html) Here, the core logic is separate — it is defined as an object that has one command and one query. The fluff widget does not need to know how the core logic works.
* [Two counters with shared core logic.](shared_logic.html) Now we can control the same instance of the core logic from two different instances of our fluff widget. However, we have a synchronization issue: whenever one widget asks the core logic to bump the counter, the other widget has no idea it needs to redraw its readout! When you interact with one widget a few times, and then with the other widget, the latter will suddenly jerk the counter up. What we should like better is for the fade effect to happen on both widgets in synchrony.
